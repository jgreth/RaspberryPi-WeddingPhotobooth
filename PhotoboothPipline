pipeline{
	agent{label 'raspberryPi3'}
	stages
	{
	    stage('GIT Fetch')
	    {
		    //node('raspberryPi3') 
		    steps
		    {
		        checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'angelitov7', url: 'https://github.com/angelitov7/RaspberryPi-WeddingPhotobooth']]])
		    }
		}
	
		stage('Photbooth UnitTest')
		{
		    //node('raspberryPi3') 
		    steps
		    {
		        sh 'kcov --include-path=/jenkins/ $WORKSPACE/kcov pytest ./test/photoBoothUnitTest.py --junitxml test_results.xml'
		        //sh 'mv /jenkins/workspace/Photobooth-Pi3/test_results.xml .'
		        sh 'cp $WORKSPACE/kcov/pytest/cobertura.xml .'
		        junit '*test_results.xml'
		        step([$class: 'CoberturaPublisher', autoUpdateHealth: false, autoUpdateStability: false, coberturaReportFile: '*cobertura.xml', failUnhealthy: false, failUnstable: false, maxNumberOfBuilds: 0, onlyStable: false, sourceEncoding: 'ASCII', zoomCoverageChart: false])
		    }
		}
	
		stage('Execute Photobooth')
		{
		    steps
		    { 
		    	build 'Photobooth-Pi3'
		    }  
		}
	}
}